{"version":3,"file":"Checkbox.ImplementationExamples.js","sourceRoot":"../src/","sources":["components/Checkbox/examples/Checkbox.ImplementationExamples.tsx"],"names":[],"mappings":";;;AAAA,WAAW;AACX,6BAA+B;AAC/B,gEAA+E;AAM/E;IAAoD,0DAA+C;IACjG,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAOb;QA+DO,iCAA2B,GAAG,UAAC,EAAgC,EAAE,OAAgB;YACvF,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAQ,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC;QAtEA,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC7D,CAAC;IAEM,+CAAM,GAAb;QACU,IAAA,gCAAS,CAAgB;QAEjC,IAAM,cAAc,GAAG;YACrB,OAAO;gBACL,IAAI,EAAE;oBACJ,SAAS,EAAE,MAAM;iBAClB;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,mBAAQ,IACP,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;oBAClD,CAAC;oBACD,MAAM,EAAE;wBACN,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;oBACjD,CAAC;iBACF,EACD,MAAM,EAAE,cAAc,EACtB,cAAc,EAAE,SAAS,GACzB;YACF,+BAAO,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,kBAAkB,kCAExC;YAER,oBAAC,mBAAQ,IACP,KAAK,EAAC,gDAAgD,EACtD,cAAc,EAAE,IAAI,EACpB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,MAAM,EAAE,cAAc,GACtB;YAEF,oBAAC,mBAAQ,IAAC,KAAK,EAAC,gCAAgC,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,GAAI;YAE3F,oBAAC,mBAAQ,IACP,KAAK,EAAC,yDAAyD,EAC/D,QAAQ,EAAE,IAAI,EACd,cAAc,EAAE,IAAI,EACpB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,MAAM,EAAE,cAAc,GACtB;YAEF,oBAAC,mBAAQ,IAAC,KAAK,EAAC,qBAAqB,EAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,2BAA2B,EAAE,MAAM,EAAE,cAAc,GAAI;YAEhI,oBAAC,mBAAQ,IAAC,KAAK,EAAC,2CAA2C,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAE,cAAc,GAAI;YAEpG,oBAAC,mBAAQ,IAAC,KAAK,EAAC,kBAAkB,EAAC,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,IAAI,CAAC,oBAAoB,GAAI,CACnG,CACP,CAAC;IACJ,CAAC;IAEO,0DAAiB,GAAzB,UAA0B,EAAgC,EAAE,SAAkB;QAC5E,OAAO,CAAC,GAAG,CAAC,oCAAkC,SAAS,MAAG,CAAC,CAAC;IAC9D,CAAC;IAMO,6DAAoB,GAA5B,UAA6B,KAAqB;QAChD,OAAO,CACL;;YACY,2BAAG,IAAI,EAAC,2BAA2B,WAAS;+BACjD,CACR,CAAC;IACJ,CAAC;IACH,qCAAC;AAAD,CAAC,AAnFD,CAAoD,KAAK,CAAC,SAAS,GAmFlE;AAnFY,wEAA8B","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\n\r\nexport interface ICheckboxBasicExampleState {\r\n  isChecked: boolean;\r\n}\r\n\r\nexport class CheckboxImplementationExamples extends React.Component<{}, ICheckboxBasicExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: false\r\n    };\r\n\r\n    this._onCheckboxChange = this._onCheckboxChange.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isChecked } = this.state;\r\n\r\n    const checkboxStyles = () => {\r\n      return {\r\n        root: {\r\n          marginTop: '10px'\r\n        }\r\n      };\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Checkbox\r\n          label=\"Uncontrolled checkbox\"\r\n          onChange={this._onCheckboxChange}\r\n          inputProps={{\r\n            onFocus: () => {\r\n              console.log('Uncontrolled checkbox is focused');\r\n            },\r\n            onBlur: () => {\r\n              console.log('Uncontrolled checkbox is blured');\r\n            }\r\n          }}\r\n          styles={checkboxStyles}\r\n          ariaLabelledBy={'labelID'}\r\n        />\r\n        <label id=\"labelID\" className=\"screenReaderOnly\">\r\n          Uncontrolled checkbox label\r\n        </label>\r\n\r\n        <Checkbox\r\n          label=\"Uncontrolled checkbox with defaultChecked true\"\r\n          defaultChecked={true}\r\n          onChange={this._onCheckboxChange}\r\n          styles={checkboxStyles}\r\n        />\r\n\r\n        <Checkbox label=\"Disabled uncontrolled checkbox\" disabled={true} styles={checkboxStyles} />\r\n\r\n        <Checkbox\r\n          label=\"Disabled uncontrolled checkbox with defaultChecked true\"\r\n          disabled={true}\r\n          defaultChecked={true}\r\n          onChange={this._onCheckboxChange}\r\n          styles={checkboxStyles}\r\n        />\r\n\r\n        <Checkbox label=\"Controlled checkbox\" checked={isChecked} onChange={this._onControlledCheckboxChange} styles={checkboxStyles} />\r\n\r\n        <Checkbox label='Checkbox rendered with boxSide \"end\" test' boxSide=\"end\" styles={checkboxStyles} />\r\n\r\n        <Checkbox label=\"Persona Checkbox\" styles={checkboxStyles} onRenderLabel={this._renderLabelWithLink} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onCheckboxChange(ev: React.FormEvent<HTMLElement>, isChecked: boolean): void {\r\n    console.log(`The option has been changed to ${isChecked}.`);\r\n  }\r\n\r\n  private _onControlledCheckboxChange = (ev: React.FormEvent<HTMLElement>, checked: boolean): void => {\r\n    this.setState({ isChecked: checked! });\r\n  };\r\n\r\n  private _renderLabelWithLink(props: ICheckboxProps): JSX.Element {\r\n    return (\r\n      <span>\r\n        This is a <a href=\"https://www.microsoft.com\">link</a> inside a label.\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]}